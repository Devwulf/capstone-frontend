{"version":3,"sources":["utils/Configuration.ts","models/Policies.ts","utils/Context.ts","components/ToggleBaseUrl.tsx","components/Tooltip.tsx","pages/LoginPage.tsx","models/Graphs.ts","utils/Constants.ts","components/LineGraph.tsx","components/PieGraph.tsx","components/Overlay.tsx","utils/Helpers.ts","utils/Enums.ts","components/Policy.tsx","components/PolicyState.tsx","logo.svg","components/Policies.tsx","components/Searchbar.tsx","components/ToggleTeam.tsx","components/TopBar.tsx","components/VideoPlayer.tsx","pages/MainPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Configuration","localBaseUrl","serverBaseUrl","Team","PoliciesModel","baseUrl","policies","this","token","a","team","Blue","state","actions","url","axios","get","headers","data","forEach","policy","push","action","TeamContext","React","createContext","setTeam","addListener","name","listener","removeListener","PolicyContext","choosePolicy","AccuracyContext","setAccuracy","accuracy","SearchContext","searchStr","setSearchStr","searchAction","addActionListener","removeActionListener","AuthContext","setToken","BaseUrlContext","setBaseUrl","CookiesContext","cookies","Cookies","TooltipContext","currentTooltip","isTooltipEnabled","setCurrentTooltip","index","resetCurrentTooltip","setTooltipEnabled","isEnabled","GraphOverlayContext","showGraph","setShowGraph","ToggleBaseUrl","props","Consumer","className","htmlFor","icons","checked","onChange","event","target","Component","Tooltip","style","arrowStyle","order","text","position","positionOffsetX","positionOffsetY","targetSizeY","hasPrev","hasNext","hasClose","bottom","left","top","right","hidden","onClick","LoginPageInner","username","password","isRegister","onDemoClick","bind","onRegister","onLogin","setState","baseUrlContext","post","res","status","alert","response","authContext","auth","value","type","LoginPage","useContext","TwoDGraphModel","graph","points","endAction","point","LabeledGraphModel","startState","startAction","hasKills","Constants","Actions","WinningActions","LineGraphInner","getData","isProbability","retrieveProbabilityGraph","retrieveQValuesGraph","getSchema","xs","ys","x","y","labels","datasets","label","tension","backgroundColor","borderColor","options","plugins","title","display","scales","min","max","showTeam","concat","Red","styles","container","base","width","defaultValue","find","item","LineGraph","PieGraphInner","values","onAfterChange","handle","CustomHandle","dragging","restProps","prefixCls","overlay","visible","placement","zIndex","PieGraph","Overlay","height","setStateAsync","component","Promise","resolve","Action","Policy","isSelected","isDisabled","isBestProb","isBestQValue","showState","showAction","showProbability","showQValue","showGoldAdv","probability","toFixed","qValue","goldAdv","disabled","PolicyState","bestProb","bestQ","selectedAction","allSchemas","length","isNaN","Number","schema","undefined","reduce","prev","current","marginBottom","autoHide","autoHideTimeout","map","deepEqual","contextType","PoliciesInner","currentPolicies","bestPolicies","nextPolicies","pastPolicies","isLoading","correctCount","onTeamChanged","onBaseUrlChanged","resetPolicies","onChoosePolicy","teamContext","retrieveStartPolicies","clearPolicies","accuracyContext","addPolicy","bestSchemas","currentSchemas","count","policiesArr","currentState","retrieveBestPolicies","retrieveNextPolicies","nextSchemas","slice","nextState","Provider","src","logo","alt","Policies","Searchbar","placeholder","onSubmit","ToggleTeam","TopBar","onAccuracyChanged","context","VideoPlayer","WIDTH","embedId","isIdValid","getEmbedId","regex","match","substring","frameBorder","allow","allowFullScreen","MainPage","teamListeners","accuracyListeners","searchListeners","addTeamListener","removeTeamListener","addAccuracyListener","removeAccuracyListener","addSearchActionListener","removeSearchActionListener","all","fn","filter","to","App","baseUrlListeners","loadTokenFromCookie","checkTokenValid","addBaseUrlListener","removeBaseUrlListener","enabled","set","isTokenValid","exact","path","withCookies","Boolean","window","location","hostname","ReactDOM","render","StrictMode","basename","CookiesProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e1b246f0.chunk.js","sourcesContent":["export default class Configuration {\n    public static readonly localBaseUrl: string = \"http://localhost:5000\";\n    public static readonly serverBaseUrl: string = \"https://api.devwulfcodes.com/capstone\";\n}","import axios from \"axios\";\nimport { PolicySchema } from \"./Policy\";\n\nexport enum Team {\n    Blue,\n    Red\n}\n\nexport interface IPoliciesModel {\n    retrieveBestPolicies(token: string, team?: Team, state?: number, actions?: string): Promise<void>;\n    retrieveNextPolicies(token: string, team?: Team, state?: number, action?: string): Promise<void>;\n    retrieveStartPolicies(token: string, team?: Team): Promise<void>;\n    addPolicy(policy: PolicySchema): void;\n    clearPolicies(): void;\n    getSchema(): PoliciesSchema;\n}\n\nexport class PoliciesModel implements IPoliciesModel {\n    private baseUrl: string;\n    private policies: PoliciesSchema;\n\n    constructor(baseUrl: string, policies: PoliciesSchema = { policies: [] }) {\n        this.baseUrl = baseUrl;\n        this.policies = policies;\n    }\n\n    async retrieveBestPolicies(token: string, team: Team = Team.Blue, state = 0, actions = \"bKills\"): Promise<void> {\n        // Get policies from backend\n        const policies: PolicySchema[] = [];\n        const url = `${this.baseUrl}/api/policy/best?team=${Team[team]}&state=${state}&actions=${actions}`;\n        const res = await axios.get<PoliciesSchema>(url, {\n            headers: {\n                \"X-Access-Tokens\": token\n            }\n        });\n        res.data.policies.forEach(policy => {\n            policies.push(policy);\n        });\n\n        this.policies.policies = policies;\n    }\n\n    async retrieveNextPolicies(token: string, team: Team = Team.Blue, state = 0, action = \"bKills\"): Promise<void> {\n        // Get policies from backend\n        const policies: PolicySchema[] = [];\n        const url = `${this.baseUrl}/api/policy/next?team=${Team[team]}&state=${state}&action=${action}`;\n        const res = await axios.get<PoliciesSchema>(url, {\n            headers: {\n                \"X-Access-Tokens\": token\n            }\n        });\n        res.data.policies.forEach(policy => {\n            policies.push(policy);\n        });\n\n        this.policies.policies = policies;\n    }\n\n    async retrieveStartPolicies(token: string, team: Team = Team.Blue): Promise<void> {\n        // Get policies from backend\n        const policies: PolicySchema[] = [];\n        const url = `${this.baseUrl}/api/policy/start?team=${Team[team]}`;\n        const res = await axios.get<PoliciesSchema>(url, {\n            headers: {\n                \"X-Access-Tokens\": token\n            }\n        });\n        res.data.policies.forEach(policy => {\n            policies.push(policy);\n        });\n\n        this.policies.policies = policies;\n    }\n\n    addPolicy(policy: PolicySchema): void {\n        // TODO: Validate policy\n        this.policies.policies.push(policy);\n    }\n\n    clearPolicies(): void {\n        this.policies.policies = [];\n    }\n\n    getSchema(): PoliciesSchema {\n        return this.policies;\n    }\n}\n\nexport class DummyPoliciesModel implements IPoliciesModel {\n    private policies: PoliciesSchema;\n\n    constructor(policies: PoliciesSchema = { policies: [] }) {\n        this.policies = policies;\n    }\n\n    async retrieveBestPolicies(token: string, team: Team = Team.Blue, state = 0, actions = \"bKills\"): Promise<void> {\n        const bluePolicySchemas: PolicySchema[] = [\n            {state: state, action: actions, probability: 1, qValue: 0, goldAdv: \"Even\"},\n            {state: state + 1, action: \"rKills\", probability: Math.random(), qValue: Math.random() * 100, goldAdv: \"Even\"},\n            {state: state + 2, action: \"bMID_OUTER_TURRET\", probability: Math.random(), qValue: Math.random() * 100, goldAdv: \"Even\"},\n            {state: state + 3, action: \"bMID_INNER_TURRET\", probability: Math.random(), qValue: Math.random() * 100, goldAdv: \"Even\"},\n            {state: state + 4, action: \"bMID_BASE_TURRET\", probability: Math.random(), qValue: Math.random() * 100, goldAdv: \"Even\"},\n            {state: state + 5, action: \"bMID_INHIBITOR\", probability: Math.random(), qValue: Math.random() * 100, goldAdv: \"Even\"},\n            {state: state + 6, action: \"bMID_NEXUS_TURRET\", probability: Math.random(), qValue: Math.random() * 100, goldAdv: \"Even\"},\n            {state: state + 7, action: \"bMID_NEXUS_TURRET\", probability: Math.random(), qValue: Math.random() * 100, goldAdv: \"Even\"},\n            {state: state + 8, action: \"bWon\", probability: Math.random(), qValue: Math.random() * 100, goldAdv: \"Even\"},\n        ];\n\n        const redPolicySchemas: PolicySchema[] = [\n            {state: state, action: actions, probability: 1, qValue: 0, goldAdv: \"Even\"},\n            {state: state + 1, action: \"bKills\", probability: Math.random(), qValue: Math.random() * 100, goldAdv: \"Even\"},\n            {state: state + 2, action: \"rMID_OUTER_TURRET\", probability: Math.random(), qValue: Math.random() * 100, goldAdv: \"Even\"},\n            {state: state + 3, action: \"rMID_INNER_TURRET\", probability: Math.random(), qValue: Math.random() * 100, goldAdv: \"Even\"},\n            {state: state + 4, action: \"rMID_BASE_TURRET\", probability: Math.random(), qValue: Math.random() * 100, goldAdv: \"Even\"},\n            {state: state + 5, action: \"rMID_INHIBITOR\", probability: Math.random(), qValue: Math.random() * 100, goldAdv: \"Even\"},\n            {state: state + 6, action: \"rMID_NEXUS_TURRET\", probability: Math.random(), qValue: Math.random() * 100, goldAdv: \"Even\"},\n            {state: state + 7, action: \"rMID_NEXUS_TURRET\", probability: Math.random(), qValue: Math.random() * 100, goldAdv: \"Even\"},\n            {state: state + 8, action: \"rWon\", probability: Math.random(), qValue: Math.random() * 100, goldAdv: \"Even\"},\n        ];\n        \n        this.policies.policies = team === Team.Blue ? bluePolicySchemas : redPolicySchemas;\n    }\n\n    async retrieveNextPolicies(token: string, team: Team = Team.Blue, state = 0, action = \"bKills\"): Promise<void> {\n        const bluePolicySchemas: PolicySchema[] = [\n            {state: state + 1, action: \"bKills\", probability: 1, qValue: 0, goldAdv: \"Even\"},\n            {state: state + 1, action: \"rKills\", probability: Math.random(), qValue: Math.random() * 100, goldAdv: \"Even\"},\n            {state: state + 1, action: \"bMID_OUTER_TURRET\", probability: Math.random(), qValue: Math.random() * 100, goldAdv: \"Even\"},\n            {state: state + 1, action: \"bMID_INNER_TURRET\", probability: Math.random(), qValue: Math.random() * 100, goldAdv: \"Even\"},\n            {state: state + 1, action: \"bMID_BASE_TURRET\", probability: Math.random(), qValue: Math.random() * 100, goldAdv: \"Even\"},\n            {state: state + 1, action: \"bMID_INHIBITOR\", probability: Math.random(), qValue: Math.random() * 100, goldAdv: \"Even\"},\n            {state: state + 1, action: \"bMID_NEXUS_TURRET\", probability: Math.random(), qValue: Math.random() * 100, goldAdv: \"Even\"},\n        ];\n\n        const redPolicySchemas: PolicySchema[] = [\n            {state: state + 1, action: \"bKills\", probability: 1, qValue: 0, goldAdv: \"Even\"},\n            {state: state + 1, action: \"rKills\", probability: Math.random(), qValue: Math.random() * 100, goldAdv: \"Even\"},\n            {state: state + 1, action: \"rMID_OUTER_TURRET\", probability: Math.random(), qValue: Math.random() * 100, goldAdv: \"Even\"},\n            {state: state + 1, action: \"rMID_INNER_TURRET\", probability: Math.random(), qValue: Math.random() * 100, goldAdv: \"Even\"},\n            {state: state + 1, action: \"rMID_BASE_TURRET\", probability: Math.random(), qValue: Math.random() * 100, goldAdv: \"Even\"},\n            {state: state + 1, action: \"rMID_INHIBITOR\", probability: Math.random(), qValue: Math.random() * 100, goldAdv: \"Even\"},\n            {state: state + 1, action: \"rMID_NEXUS_TURRET\", probability: Math.random(), qValue: Math.random() * 100, goldAdv: \"Even\"},\n        ];\n        \n        this.policies.policies = team === Team.Blue ? bluePolicySchemas : redPolicySchemas;\n    }\n\n    async retrieveStartPolicies(token: string, team: Team = Team.Blue): Promise<void> {\n        const policySchemas: PolicySchema[] = [\n            {state: 0, action: \"rKills\", probability: Math.random(), qValue: 0, goldAdv: \"Even\"},\n            {state: 0, action: \"bKills\", probability: Math.random(), qValue: 0, goldAdv: \"Even\"},\n            {state: 0, action: \"rTOP_OUTER_TURRET\", probability: Math.random(), qValue: 0, goldAdv: \"Even\"},\n            {state: 0, action: \"bBOT_OUTER_TURRET\", probability: Math.random(), qValue: 0, goldAdv: \"Even\"},\n            {state: 0, action: \"bDRAGON\", probability: Math.random(), qValue: 0, goldAdv: \"Even\"},\n            {state: 0, action: \"rBOT_OUTER_TURRET\", probability: Math.random(), qValue: 0, goldAdv: \"Even\"},\n            {state: 0, action: \"bTOP_OUTER_TURRET\", probability: Math.random(), qValue: 0, goldAdv: \"Even\"},\n        ];\n        \n        this.policies.policies = policySchemas;\n    }\n\n    addPolicy(policy: PolicySchema): void {\n        // TODO: Validate policy\n        this.policies.policies.push(policy);\n    }\n\n    clearPolicies(): void {\n        this.policies.policies = [];\n    }\n\n    getSchema(): PoliciesSchema {\n        return this.policies;\n    }\n}\n\nexport type PoliciesSchema = {\n    policies: PolicySchema[];\n}","import React from \"react\";\nimport { Cookies } from \"react-cookie/es6\";\nimport { Team } from \"../models/Policies\";\nimport { PolicySchema } from \"../models/Policy\";\n\nexport type TeamContextType = {\n    team: Team;\n    setTeam: (team: Team) => void;\n    addListener: (name: string, listener: (team: Team) => Promise<void>) => void;\n    removeListener: (name: string) => void;\n};\n\nexport const TeamContext = React.createContext<TeamContextType>({\n    team: Team.Blue,\n    setTeam: team => { return; },\n    addListener: (name, listener) => { return; },\n    removeListener: (name) => { return; }\n});\n\nexport type PolicyContextType = {\n    choosePolicy: (team: Team, policy: PolicySchema) => Promise<void>;\n}\n\nexport const PolicyContext = React.createContext<PolicyContextType>({\n    choosePolicy: async (team, policy) => { return; }\n});\n\nexport type AccuracyContextType = {\n    setAccuracy: (accuracy: number) => Promise<void>;\n    addListener: (name: string, listener: (accuracy: number) => Promise<void>) => void;\n    removeListener: (name: string) => void;\n}\n\nexport const AccuracyContext = React.createContext<AccuracyContextType>({\n    setAccuracy: async accuracy => { return; },\n    addListener: (name, listener) => { return; },\n    removeListener: (name) => { return; }\n});\n\nexport type SearchContextType = {\n    searchStr: string;\n    setSearchStr: (searchStr: string) => void;\n    searchAction: () => Promise<void>;\n    addActionListener: (name: string, listener: (searchStr: string) => Promise<void>) => void;\n    removeActionListener: (name: string) => void;\n}\n\nexport const SearchContext = React.createContext<SearchContextType>({\n    searchStr: \"\",\n    setSearchStr: searchStr => { return; },\n    searchAction: async () => { return; },\n    addActionListener: (name, listener) => { return; },\n    removeActionListener: (name) => { return; }\n});\n\nexport type AuthContextType = {\n    token: string;\n    setToken: (token: string) => void;\n}\n\nexport const AuthContext = React.createContext<AuthContextType>({\n    token: \"\",\n    setToken: token => { return; }\n});\n\nexport type BaseUrlContextType = {\n    baseUrl: string;\n    setBaseUrl: (baseUrl: string) => void;\n    addListener: (name: string, listener: (baseUrl: string) => Promise<void>) => void;\n    removeListener: (name: string) => void;\n}\n\nexport const BaseUrlContext = React.createContext<BaseUrlContextType>({\n    baseUrl: \"\",\n    setBaseUrl: baseUrl => { return; },\n    addListener: (name, listener) => { return; },\n    removeListener: (name) => { return; }\n});\n\nexport type CookiesContextType = {\n    cookies: Cookies;\n}\n\nexport const CookiesContext = React.createContext<CookiesContextType>({\n    cookies: new Cookies()\n});\n\nexport type TooltipContextType = {\n    currentTooltip: number;\n    isTooltipEnabled: boolean;\n    setCurrentTooltip: (index: number) => void;\n    resetCurrentTooltip: () => void;\n    setTooltipEnabled: (isEnabled: boolean) => void;\n}\n\nexport const TooltipContext = React.createContext<TooltipContextType>({\n    currentTooltip: 0,\n    isTooltipEnabled: true,\n    setCurrentTooltip: index => { return; },\n    resetCurrentTooltip: () => { return; },\n    setTooltipEnabled: isEnabled => { return; }\n});\n\nexport type GraphOverlayContextType = {\n    showGraph: boolean;\n    setShowGraph: (showGraph: boolean) => void;\n}\n\nexport const GraphOverlayContext = React.createContext<GraphOverlayContextType>({\n    showGraph: false,\n    setShowGraph: showGraph => { return; }\n});","import React from \"react\";\nimport Toggle from \"react-toggle\";\nimport { Team } from \"../models/Policies\";\nimport Configuration from \"../utils/Configuration\";\nimport { BaseUrlContext, TeamContext } from \"../utils/Context\";\n\ntype ToggleBaseUrlProps = {\n\n}\n\ntype ToggleBaseUrlState = {\n    \n}\n\nexport default class ToggleBaseUrl extends React.Component<ToggleBaseUrlProps, ToggleBaseUrlState> {\n    constructor(props: ToggleBaseUrlProps) {\n        super(props);\n\n        this.state = {\n            \n        };\n    }\n\n    render(): JSX.Element {\n        return (\n            <BaseUrlContext.Consumer>\n                {({baseUrl, setBaseUrl}) => (\n                    <div className=\"flex items-center\">\n                        <label htmlFor=\"\" className=\"flex items-center\">\n                            <span className=\"text-sm font-bold mr-2 text-gray-900\">Local</span>\n                            <Toggle className=\"mr-2\"\n                                icons={false}\n                                checked={baseUrl === Configuration.serverBaseUrl ? true : false}\n                                onChange={event => {\n                                    const url = event.target.checked ? \n                                        Configuration.serverBaseUrl : Configuration.localBaseUrl;\n                                    setBaseUrl(url);\n                                }} />\n                            <span className=\"text-sm font-bold text-gray-900\">Server</span>\n                        </label>\n                    </div>\n                )}\n            </BaseUrlContext.Consumer>\n        );\n    }\n}","import React from \"react\";\nimport { TooltipContext } from \"../utils/Context\";\n\ntype TooltipProps = {\n    order: number;\n    text: string;\n    position: \"left\" | \"right\" | \"top\" | \"bottom\";\n    positionOffsetX?: number;\n    positionOffsetY?: number;\n    targetSizeY?: number;\n    hasPrev?: boolean;\n    hasNext?: boolean;\n    hasClose?: boolean;\n}\n\ntype TooltipState = {\n\n}\n\nexport default class Tooltip extends React.Component<TooltipProps, TooltipState> {\n    constructor(props: TooltipProps) {\n        super(props);\n\n        this.state = {\n\n        };\n    }\n\n    render(): JSX.Element {\n        const { order, text, position, positionOffsetX = 0, positionOffsetY = 0, targetSizeY = 0, hasPrev = false, hasNext = false, hasClose = false } = this.props;\n        let style: React.CSSProperties;\n        let arrowStyle: React.CSSProperties;\n        switch(position) {\n        case \"top\":\n            arrowStyle = {\n                bottom: `calc(100% + 0.75rem + ${positionOffsetY}rem)`\n            };\n            style = {\n                left: `${positionOffsetX !== 0 ? positionOffsetX + \"rem\" : \"\"}`,\n                bottom: arrowStyle.bottom\n            };\n            break;\n        case \"bottom\":\n            arrowStyle = {\n                top: `calc(100% + 0.75rem + ${positionOffsetY}rem)`\n            };\n            style = {\n                left: `${positionOffsetX !== 0 ? positionOffsetX + \"rem\" : \"\"}`,\n                top: arrowStyle.top\n            };\n            break;\n        case \"left\":\n            arrowStyle = {\n                top: `${targetSizeY / 2}px`,\n                right: `calc(100% + 0.75rem + ${positionOffsetX}rem)`\n            };\n            style = {\n                top: `${positionOffsetY !== 0 ? positionOffsetY + \"rem\" : \"\"}`,\n                right: arrowStyle.right\n            };\n            break;\n        default:\n            arrowStyle = {\n                top: `${targetSizeY / 2}px`,\n                left: `calc(100% + 0.75rem + ${positionOffsetX}rem)`\n            };\n            style = {\n                top: `${positionOffsetY !== 0 ? positionOffsetY + \"rem\" : \"\"}`,\n                left: arrowStyle.left\n            };\n            break;\n        }\n        return (\n            <TooltipContext.Consumer>\n                {({ currentTooltip, isTooltipEnabled, setCurrentTooltip, setTooltipEnabled }) => { \n                    if (!isTooltipEnabled || currentTooltip !== order)\n                        return null;\n                    else\n                        return (\n                            <div className=\"relative w-full flex items-center justify-center z-50\"\n                                style={{bottom: \"100%\"}}>\n                                <div className=\"absolute flex flex-col p-2 text-sm rounded-default w-64 bg-gray-800 text-gray-100\"\n                                    style={{...style}}>\n                                    <span className=\"mb-2\">\n                                        {text}\n                                    </span>\n                                    <div className=\"flex justify-between\">\n                                        <div className=\"\">\n                                            <button className=\"px-2 py-1 rounded-default bg-gray-600\" \n                                                hidden={!hasPrev || order <= 0}\n                                                onClick={() => setCurrentTooltip(order - 1)}>\n                                                Prev\n                                            </button>\n                                        </div>\n                                        <div className=\"\">\n                                            <button className=\"px-2 py-1 mr-1 rounded-default bg-blue-500\" \n                                                hidden={!hasNext}\n                                                onClick={() => setCurrentTooltip(order + 1)}>\n                                                Next\n                                            </button>\n                                            <button className=\"px-2 py-1 rounded-default bg-red-500\" \n                                                hidden={!hasClose}\n                                                onClick={() => setTooltipEnabled(false)}>\n                                                Close\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className={`tooltip-${position} absolute flex flex-col w-full h-full`}\n                                    style={{...arrowStyle}}></div>\n                            </div>\n                        );\n                }}\n            </TooltipContext.Consumer>\n        );\n    }\n}","import axios from \"axios\";\nimport React, { useContext } from \"react\";\nimport ToggleBaseUrl from \"../components/ToggleBaseUrl\";\nimport Tooltip from \"../components/Tooltip\";\nimport { AuthContext, AuthContextType, BaseUrlContext, BaseUrlContextType, TooltipContext, TooltipContextType } from \"../utils/Context\";\n\ntype LoginPageProps = {\n    authContext: AuthContextType;\n    baseUrlContext: BaseUrlContextType;\n}\n\ntype LoginPageState = {\n    username: string;\n    password: string;\n    isRegister: boolean;\n}\n\nexport class LoginPageInner extends React.Component<LoginPageProps, LoginPageState> {\n    constructor(props: LoginPageProps) {\n        super(props);\n\n        this.state = {\n            username: \"\",\n            password: \"\",\n            isRegister: false\n        };\n\n        this.onDemoClick = this.onDemoClick.bind(this);\n        this.onRegister = this.onRegister.bind(this);\n        this.onLogin = this.onLogin.bind(this);\n    }\n\n    onDemoClick(): void {\n        const demoUsername = \"test\";\n        const demoPassword = \"test123\";\n        this.setState({username: demoUsername, password: demoPassword});\n    }\n\n    async onRegister(): Promise<void> {\n        const { baseUrlContext } = this.props;\n        const { username, password } = this.state;\n\n        try {\n            const res = await axios.post(`${baseUrlContext.baseUrl}/auth/register`, {\n                username: username,\n                password: password\n            });\n    \n            if (res.status === 200)\n                alert(res.data[\"message\"]);\n        } catch(err) {\n            alert(`${err.response.status}: ${err.response.data}`);\n        }\n    }\n\n    async onLogin(): Promise<void> {\n        const { authContext, baseUrlContext } = this.props;\n        const { username, password } = this.state;\n        \n        try {\n            const res = await axios.post(`${baseUrlContext.baseUrl}/auth/login`, {}, {\n                auth: {\n                    username: username,\n                    password: password\n                }\n            });\n            if (res.status === 200)\n                authContext.setToken(res.data[\"token\"]);\n        } catch (err) {\n            alert(`${err.response.status}: ${err.response.data}`);\n        }\n    }\n\n    render(): JSX.Element {\n        const { username, password, isRegister } = this.state;\n\n        return (\n            <div className=\"flex justify-center items-center w-screen h-screen\">\n                {(!isRegister && \n                    <div className=\"flex flex-col p-4 rounded-lg bg-indigo-200 text-indigo-900\">\n                        <div className=\"flex flex-row justify-between items-center mb-4\">\n                            <span className=\"text-2xl font-bold\">Login</span>\n                            <div className=\"\">\n                                <ToggleBaseUrl />\n                                <Tooltip order={0}\n                                    text=\"This is for choosing whether to use your own local backend server or a premade server for login.\" \n                                    position=\"top\"\n                                    positionOffsetY={1.5}\n                                    hasNext />\n                            </div>\n                        </div>\n                        <div className=\"flex flex-col mb-2\">\n                            <label className=\"text-xs mb-1\" htmlFor=\"\">Username</label>\n                            <input className=\"px-2 py-1 rounded-default text-sm\" \n                                value={username}\n                                onChange={event => this.setState({username: event.target.value})} />\n                        </div>\n                        <div className=\"flex flex-col mb-4\">\n                            <label className=\"text-xs mb-1\" htmlFor=\"\">Password</label>\n                            <input className=\"px-2 py-1 rounded-default text-sm\" \n                                value={password} \n                                type=\"password\"\n                                onChange={event => this.setState({password: event.target.value})} />\n                        </div>\n\n                        <div className=\"flex justify-between\">\n                            {/*\n                            <button className=\"px-4 py-1 mr-2 rounded-default text-xs bg-indigo-400 text-indigo-100\"\n                                onClick={() => this.setState({isRegister: true})}>Register</button>\n                            */}\n                            <button className=\"px-4 py-1 mr-2 rounded-default text-xs bg-indigo-700 text-indigo-200\"\n                                onClick={this.onLogin}>Login</button>\n                            <div className=\"\">\n                                <button className=\"px-4 py-1 rounded-default text-xs bg-indigo-400 text-indigo-100\"\n                                    onClick={this.onDemoClick}>\n                                    Demo\n                                </button>\n                                <Tooltip order={1}\n                                    text=\"This button fills in the login details for demo. Try it out!\"\n                                    position=\"right\"\n                                    positionOffsetY={-1.5}\n                                    targetSizeY={26}\n                                    hasPrev\n                                    hasNext />\n                            </div>\n                        </div>\n                    </div>\n                )}\n                {/* || \n                    (isRegister && \n                        <div className=\"flex flex-col p-4 rounded-lg bg-indigo-200 text-indigo-900\">\n                            <div className=\"flex flex-row justify-between items-center mb-4\">\n                                <span className=\"text-2xl font-bold\">Register</span>\n                                <ToggleBaseUrl />\n                            </div>\n                            <div className=\"flex flex-col mb-2\">\n                                <label className=\"text-xs mb-1\" htmlFor=\"\">Username</label>\n                                <input className=\"px-2 py-1 rounded-default text-sm\" \n                                    value={username}\n                                    onChange={event => this.setState({username: event.target.value})} />\n                            </div>\n                            <div className=\"flex flex-col mb-4\">\n                                <label className=\"text-xs mb-1\" htmlFor=\"\">Password</label>\n                                <input className=\"px-2 py-1 rounded-default text-sm\" \n                                    value={password} \n                                    type=\"password\"\n                                    onChange={event => this.setState({password: event.target.value})} />\n                            </div>\n    \n                            <div className=\"flex justify-between\">\n                                <button className=\"px-4 py-1 mr-2 rounded-default text-xs bg-indigo-700 text-indigo-200\"\n                                    onClick={this.onRegister}>Register</button>\n                                <button className=\"px-4 py-1 mr-2 rounded-default text-xs bg-indigo-400 text-indigo-100\"\n                                    onClick={() => this.setState({isRegister: false})}>\n                                        Login\n                                </button>\n                                <button className=\"px-4 py-1 rounded-default text-xs bg-indigo-400 text-indigo-100\"\n                                    onClick={this.onDemoClick}>\n                                        Demo\n                                </button>\n                            </div>\n                        </div>\n                )}*/}\n            </div>\n        );\n    }\n}\n\nexport default function LoginPage(): JSX.Element {\n    const auth = useContext(AuthContext);\n    const baseUrl = useContext(BaseUrlContext);\n\n    return (\n        <LoginPageInner authContext={auth} baseUrlContext={baseUrl} />\n    );\n}","import axios from \"axios\";\nimport { Team } from \"./Policies\";\n\nexport interface ITwoDGraphModel {\n    retrieveQValuesGraph(token: string, team?: Team, endAction?: string): Promise<void>;\n    retrieveProbabilityGraph(token: string, team?: Team, endAction?: string): Promise<void>;\n    clearPoints(): void;\n    getSchema(): TwoDGraphSchema;\n}\n\nexport interface ILabeledGraphModel {\n    retrieveProbabilityGraph(token: string, team?: Team, startState?: number, startAction?: string, hasKills?: boolean): Promise<void>;\n    clearPoints(): void;\n    getSchema(): LabeledGraphSchema;\n}\n\nexport class TwoDGraphModel implements ITwoDGraphModel {\n    private baseUrl: string;\n    private graph: TwoDGraphSchema;\n\n    constructor(baseUrl: string) {\n        this.baseUrl = baseUrl;\n        this.graph = { points: [] };\n    }\n\n    async retrieveQValuesGraph(token: string, team: Team = Team.Blue, endAction = \"bKills\"): Promise<void> {\n        const points: TwoDPointSchema[] = [];\n        const url = `${this.baseUrl}/api/policy/line?team=${Team[team]}&endAction=${endAction}&isProbability=${false}`;\n        const res = await axios.get<TwoDGraphSchema>(url, {\n            headers: {\n                \"X-Access-Tokens\": token\n            }\n        });\n        res.data.points.forEach(point => {\n            points.push(point);\n        });\n\n        this.graph.points = points;\n    }\n\n    async retrieveProbabilityGraph(token: string, team: Team = Team.Blue, endAction = \"bKills\"): Promise<void> {\n        const points: TwoDPointSchema[] = [];\n        const url = `${this.baseUrl}/api/policy/line?team=${Team[team]}&endAction=${endAction}&isProbability=${true}`;\n        const res = await axios.get<TwoDGraphSchema>(url, {\n            headers: {\n                \"X-Access-Tokens\": token\n            }\n        });\n        res.data.points.forEach(point => {\n            points.push(point);\n        });\n\n        this.graph.points = points;\n    }\n\n    clearPoints(): void {\n        this.graph.points = [];\n    }\n\n    getSchema(): TwoDGraphSchema {\n        return this.graph;\n    }\n}\n\nexport class LabeledGraphModel implements ILabeledGraphModel {\n    private baseUrl: string;\n    private graph: LabeledGraphSchema;\n\n    constructor(baseUrl: string) {\n        this.baseUrl = baseUrl;\n        this.graph = { points: [] };\n    }\n\n    async retrieveProbabilityGraph(token: string, team: Team = Team.Blue, startState = 0, startAction = \"bKills\", hasKills = true): Promise<void> {\n        const points: LabeledPointSchema[] = [];\n        const url = `${this.baseUrl}/api/policy/pie?team=${Team[team]}&startState=${startState}&startAction=${startAction}&hasKills=${hasKills}`;\n        const res = await axios.get<LabeledGraphSchema>(url, {\n            headers: {\n                \"X-Access-Tokens\": token\n            }\n        });\n        res.data.points.forEach(point => {\n            points.push(point);\n        });\n\n        this.graph.points = points;\n    }\n\n    clearPoints(): void {\n        this.graph.points = [];\n    }\n\n    getSchema(): LabeledGraphSchema {\n        return this.graph;\n    }\n}\n\nexport type TwoDPointSchema = {\n    x: number;\n    y: number;\n}\n\nexport type TwoDGraphSchema = {\n    points: TwoDPointSchema[];\n}\n\nexport type LabeledPointSchema = {\n    label: string;\n    value: number;\n}\n\nexport type LabeledGraphSchema = {\n    points: LabeledPointSchema[];\n}","export class Constants {\n    public static readonly Actions: string[] = [\n        \"bKills\",\n        \"rKills\",\n        \"bTOP_OUTER_TURRET\",\n        \"rTOP_OUTER_TURRET\",\n        \"bMID_OUTER_TURRET\",\n        \"rMID_OUTER_TURRET\",\n        \"bBOT_OUTER_TURRET\",\n        \"rBOT_OUTER_TURRET\",\n        \"bTOP_INNER_TURRET\",\n        \"rTOP_INNER_TURRET\",\n        \"bMID_INNER_TURRET\",\n        \"rMID_INNER_TURRET\",\n        \"bBOT_INNER_TURRET\",\n        \"rBOT_INNER_TURRET\",\n        \"bTOP_BASE_TURRET\",\n        \"rTOP_BASE_TURRET\",\n        \"bMID_BASE_TURRET\",\n        \"rMID_BASE_TURRET\",\n        \"bBOT_BASE_TURRET\",\n        \"rBOT_BASE_TURRET\",\n        \"bTOP_INHIBITOR\",\n        \"rTOP_INHIBITOR\",\n        \"bMID_INHIBITOR\",\n        \"rMID_INHIBITOR\",\n        \"bBOT_INHIBITOR\",\n        \"rBOT_INHIBITOR\",\n        \"bMID_NEXUS_TURRET\",\n        \"rMID_NEXUS_TURRET\",\n        \"bDRAGON\",\n        \"rDRAGON\",\n        \"bRIFT_HERALD\",\n        \"rRIFT_HERALD\",\n        \"bBARON_NASHOR\",\n        \"rBARON_NASHOR\",\n        \"bELDER_DRAGON\",\n        \"rELDER_DRAGON\"\n    ];\n\n    public static readonly WinningActions: string[] = [\n        \"bWon\",\n        \"rWon\"\n    ];\n}","import { ChartData, ChartOptions } from \"chart.js\";\nimport React, { useContext } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport Toggle from \"react-toggle\";\nimport Select from \"react-select\";\nimport { ITwoDGraphModel, TwoDGraphModel } from \"../models/Graphs\";\nimport { Team } from \"../models/Policies\";\nimport { AuthContext, AuthContextType, BaseUrlContext, BaseUrlContextType } from \"../utils/Context\";\nimport { Constants } from \"../utils/Constants\";\n\ntype LineGraphProps = {\n    authContext: AuthContextType;\n    baseUrlContext: BaseUrlContextType;\n    isProbability: boolean;\n    showTeam?: boolean;\n}\n\ntype LineGraphState = {\n    team: Team;\n    endAction: string;\n    graph: ITwoDGraphModel;\n    data?: ChartData;\n    options?: ChartOptions;\n}\n\nclass LineGraphInner extends React.Component<LineGraphProps, LineGraphState> {\n    constructor(props: LineGraphProps) {\n        super(props);\n\n        const baseUrl = props.baseUrlContext.baseUrl;\n        this.state = {\n            team: Team.Blue,\n            endAction: \"bKills\",\n            graph: new TwoDGraphModel(baseUrl)\n        };\n\n        this.getData = this.getData.bind(this);\n    }\n\n    async componentDidMount(): Promise<void> {\n        await this.getData();\n    }\n\n    async getData(): Promise<void> {\n        const { authContext, isProbability } = this.props;\n        const { team, endAction, graph } = this.state;\n\n        if (isProbability)\n            await graph.retrieveProbabilityGraph(authContext.token, team, endAction);\n        else\n            await graph.retrieveQValuesGraph(authContext.token, team, endAction);\n\n        const points = graph.getSchema().points;\n        const xs: number[] = [];\n        const ys: number[] = [];\n        points.forEach(point => {\n            xs.push(point.x);\n            ys.push(point.y);\n        });\n\n        const data: ChartData = {\n            labels: xs,\n            datasets: [\n                {\n                    label: `Average ${isProbability ? \"Probability\" : \"Q-Value\"}`,\n                    data: ys,\n                    tension: 0.5,\n                    backgroundColor: isProbability ? \"rgb(237, 137, 54)\" : \"rgb(159, 122, 234)\",\n                    borderColor: isProbability ? \"rgba(237, 137, 54, 0.2)\" : \"rgba(159, 122, 234, 0.2)\"\n                }\n            ]\n        };\n        const options: ChartOptions = {\n            plugins: {\n                title: {\n                    display: true,\n                    text: `Average ${isProbability ? \"Probability\" : \"Q-Value\"} over Time For ${Team[team]} Team with '${endAction}' End Action`\n                }\n            },\n            scales: {\n                x: {\n                    title: {\n                        display: true,\n                        text: \"State\"\n                    }\n                },\n                y: {\n                    min: isProbability ? 0 : -100,\n                    max: isProbability ? 1 : 100,\n                    title: {\n                        display: true,\n                        text: isProbability ? \"Probability\" : \"Q-Value\"\n                    }\n                }\n            }\n        };\n        this.setState({data: data, options: options});\n    }\n\n    render(): JSX.Element | null {\n        const { isProbability, showTeam = true } = this.props;\n        const { data, options } = this.state;\n        if (!data)\n            return null;\n        const actions: { label: string, value: string }[] = [];\n        Constants.Actions.concat(Constants.WinningActions).forEach(action => {\n            actions.push({\n                label: action,\n                value: action\n            });\n        });\n\n        return (\n            <div className=\"flex flex-col mb-16 purple\">\n                <div className=\"flex flex-row mb-4 px-4 justify-between\">\n                    <div className=\"flex items-center text-xl font-bold\">\n                        {`${isProbability ? \"Probability\" : \"Q-Value\"} Graph`}\n                    </div>\n                    <div className=\"flex flex-row\">\n                        {showTeam && (\n                            <div className=\"flex items-center mr-4\">\n                                <span className=\"text-lg font-bold mr-2 text-gray-800\">Team</span>\n                                <Toggle\n                                    icons={false}\n                                    onChange={event => {\n                                        const team = event.target.checked ?\n                                            Team.Red : Team.Blue;\n                                        this.setState({team: team});\n                                    }} />\n                            </div>\n                        )}\n                        \n                        <div className=\"flex items-center mr-4\">\n                            <span className=\"text-lg font-bold mr-2 text-gray-800\">End Action</span>\n                            <Select options={actions}\n                                styles={{\n                                    container: base => ({\n                                        ...base,\n                                        width: 300\n                                    })\n                                }}\n                                defaultValue={actions.find(action => action.label === \"bKills\")}\n                                onChange={item => {\n                                    if (item)\n                                        this.setState({endAction: item.value});\n                                }} />\n                        </div>\n                        <button className=\"px-4 rounded-default text-sm bg-green-500 text-green-200\"\n                            onClick={() => this.getData()}>\n                            Apply\n                        </button>\n                    </div>\n                </div>\n                <Line data={data} options={options} />\n            </div>\n        );\n    }\n}\n\nexport default function LineGraph(props: { isProbability: boolean, showTeam?: boolean }): JSX.Element {\n    const auth = useContext(AuthContext);\n    const baseUrl = useContext(BaseUrlContext);\n    return (\n        <LineGraphInner authContext={auth} baseUrlContext={baseUrl} isProbability={props.isProbability} showTeam={props.showTeam} />\n    );\n}","import { ChartData, ChartOptions } from \"chart.js\";\nimport React, { useContext } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport Toggle from \"react-toggle\";\nimport Select from \"react-select\";\nimport \"rc-slider/assets/index.css\";\nimport Slider, { Handle, SliderTooltip } from \"rc-slider\";\nimport { ILabeledGraphModel, LabeledGraphModel } from \"../models/Graphs\";\nimport { Team } from \"../models/Policies\";\nimport { AuthContext, AuthContextType, BaseUrlContext, BaseUrlContextType } from \"../utils/Context\";\nimport { Constants } from \"../utils/Constants\";\n\ntype PieGraphProps = {\n    authContext: AuthContextType;\n    baseUrlContext: BaseUrlContextType;\n}\n\ntype PieGraphState = {\n    team: Team;\n    startState: number;\n    startAction: string;\n    hasKills: boolean;\n    graph: ILabeledGraphModel;\n    data?: ChartData;\n    options?: ChartOptions;\n}\n\nclass PieGraphInner extends React.Component<PieGraphProps, PieGraphState> {\n    constructor(props: PieGraphProps) {\n        super(props);\n\n        const baseUrl = props.baseUrlContext.baseUrl;\n        this.state = {\n            team: Team.Blue,\n            startState: 0,\n            startAction: \"bKills\",\n            hasKills: true,\n            graph: new LabeledGraphModel(baseUrl)\n        };\n\n        this.getData = this.getData.bind(this);\n    }\n\n    async componentDidMount(): Promise<void> {\n        await this.getData();\n    }\n\n    async getData(): Promise<void> {\n        const { authContext } = this.props;\n        const { team, startState, startAction, hasKills, graph } = this.state;\n\n        await graph.retrieveProbabilityGraph(authContext.token, team, startState, startAction, hasKills);\n\n        const points = graph.getSchema().points;\n        const labels: string[] = [];\n        const values: number[] = [];\n        points.forEach(point => {\n            labels.push(point.label);\n            values.push(point.value);\n        });\n\n        const data: ChartData = {\n            labels: labels,\n            datasets: [\n                {\n                    label: `Probability on State ${startState}`,\n                    data: values,\n                    backgroundColor: [\n                        \"rgba(245, 101, 101, 0.2)\", // red\n                        \"rgba(237, 137, 54, 0.2)\", // orange\n                        \"rgba(236, 201, 75, 0.2)\", // yellow\n                        \"rgba(72, 187, 120, 0.2)\", // green\n                        \"rgba(56, 178, 172, 0.2)\", // teal\n                        \"rgba(66, 153, 225, 0.2)\", // blue\n                        \"rgba(102, 126, 234, 0.2)\", // indigo\n                        \"rgba(159, 122, 234, 0.2)\", // purple\n                        \"rgba(237, 100, 166, 0.2)\" // pink\n                    ],\n                    borderColor: [\n                        \"rgba(245, 101, 101, 1)\", // red\n                        \"rgba(237, 137, 54, 1)\", // orange\n                        \"rgba(236, 201, 75, 1)\", // yellow\n                        \"rgba(72, 187, 120, 1)\", // green\n                        \"rgba(56, 178, 172, 1)\", // teal\n                        \"rgba(66, 153, 225, 1)\", // blue\n                        \"rgba(102, 126, 234, 1)\", // indigo\n                        \"rgba(159, 122, 234, 1)\", // purple\n                        \"rgba(237, 100, 166, 1)\" // pink\n                    ]\n                }\n            ]\n        };\n        const options: ChartOptions = {\n            plugins: {\n                title: {\n                    display: true,\n                    text: `Probability of Next Action given State ${startState} and Action '${startAction}'`\n                }\n            }\n        };\n        this.setState({data: data, options: options});\n    }\n\n    render(): JSX.Element | null {\n        const { data, options } = this.state;\n        if (!data)\n            return null;\n        const actions: { label: string, value: string }[] = [];\n        Constants.Actions.forEach(action => {\n            actions.push({\n                label: action,\n                value: action\n            });\n        });\n\n        return (\n            <div className=\"flex flex-col mb-16\">\n                <div className=\"flex flex-row mb-4 px-4 justify-between\">\n                    <div className=\"flex items-center text-xl font-bold\">\n                        Probability Pie Chart\n                    </div>\n                    <div className=\"flex flex-row\">\n                        <div className=\"flex items-center mr-4\" style={{width: \"16rem\"}}>\n                            <span className=\"text-lg font-bold mr-4 text-gray-800\">State</span>\n                            <Slider min={0} max={93} onAfterChange={value => this.setState({startState: value})} handle={CustomHandle} />\n                        </div>\n\n                        <div className=\"flex items-center mr-4\">\n                            <span className=\"text-lg font-bold mr-2 text-gray-800\">Action</span>\n                            <Select options={actions}\n                                styles={{\n                                    container: base => ({\n                                        ...base,\n                                        width: 220\n                                    })\n                                }}\n                                defaultValue={actions.find(action => action.label === \"bKills\")}\n                                onChange={item => {\n                                    if (item)\n                                        this.setState({startAction: item.value});\n                                }} />\n                        </div>\n                        <button className=\"px-4 rounded-default text-sm bg-green-500 text-green-200\"\n                            onClick={() => this.getData()}>\n                            Apply\n                        </button>\n                    </div>\n                </div>\n                <Pie data={data} options={options} />\n            </div>\n        );\n    }\n}\n\nfunction CustomHandle(props: {\n    className: string;\n    prefixCls?: string;\n    vertical?: boolean;\n    offset: number;\n    value: number;\n    dragging?: boolean;\n    disabled?: boolean;\n    min?: number;\n    max?: number;\n    reverse?: boolean;\n    index: number;\n    tabIndex?: number;\n    ariaLabel: string;\n    ariaLabelledBy: string;\n    style?: React.CSSProperties;\n    ref?: React.Ref<any>;\n}) {\n    const { value, dragging, index, ...restProps } = props;\n    return (\n        <SliderTooltip\n            prefixCls=\"rc-slider-tooltip\"\n            overlay={`${value}`}\n            visible={dragging}\n            placement=\"top\"\n            key={index}\n            zIndex={50}\n        >\n            <Handle value={value} {...restProps} />\n        </SliderTooltip>\n    );\n}\n\nexport default function PieGraph(): JSX.Element {\n    const auth = useContext(AuthContext);\n    const baseUrl = useContext(BaseUrlContext);\n    return (\n        <PieGraphInner authContext={auth} baseUrlContext={baseUrl} />\n    );\n}","import React from \"react\";\nimport Scrollbars from \"react-custom-scrollbars-2\";\nimport { GraphOverlayContext } from \"../utils/Context\";\nimport LineGraph from \"./LineGraph\";\nimport PieGraph from \"./PieGraph\";\n\ntype OverlayProps = {\n\n}\n\ntype OverlayState = {\n\n}\n\nexport default class Overlay extends React.Component<OverlayProps, OverlayState> {\n    constructor(props: OverlayProps) {\n        super(props);\n\n        this.state = {\n\n        };\n    }\n\n    render(): JSX.Element {\n        return (\n            <GraphOverlayContext.Consumer>\n                {({ setShowGraph }) => (\n                    <div className=\"absolute top-0 bottom-0 left-0 right-0 flex\">\n                        <div className=\"w-full h-full bg-gray-900 opacity-50\"></div>\n                        <div className=\"absolute w-full h-full flex items-center justify-center px-24 py-12 z-20\">\n                            <div className=\"w-full h-full max-w-6xl bg-gray-100\">\n                                <div className=\"p-4 flex flex-row-reverse justify-between\">\n                                    <button className=\"px-4 py-2 rounded-default text-sm bg-red-500 text-red-200\"\n                                        onClick={() => setShowGraph(false)}>\n                                        Close\n                                    </button>\n                                </div>\n                                <div className=\"p-4\" style={{height: \"calc(100% - 4.5rem)\"}}>\n                                    <Scrollbars>\n                                        <div className=\"px-4\">\n                                            <LineGraph isProbability={true} showTeam={false} />\n                                            <LineGraph isProbability={false} />\n                                            <PieGraph />\n                                        </div>\n                                    </Scrollbars>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </GraphOverlayContext.Consumer>\n        );\n    }\n}","import React from \"react\";\n\nexport async function setStateAsync<P, S, K extends keyof S>(\n    state:\n        ((prevState: Readonly<S>, props: Readonly<P>) => (Pick<S, K> | S | null)) |\n        Pick<S, K> |\n        S |\n        null,\n    component: React.Component<P, S>\n): Promise<unknown> {\n    return new Promise(resolve => component.setState(state, () => resolve(null)));\n}","export enum Action {\n    bKills,\n    bTOP_OUTER_TURRET,\n    bTOP_INNER_TURRET,\n    bTOP_BASE_TURRET,\n    bTOP_INHIBITOR,\n    bMID_OUTER_TURRET,\n    bMID_INNER_TURRET,\n    bMID_BASE_TURRET,\n    bMID_INHIBITOR,\n    bMID_NEXUS_TURRET,\n    bBOT_OUTER_TURRET,\n    bBOT_INNER_TURRET,\n    bBOT_BASE_TURRET,\n    bBOT_INHIBITOR,\n    bDRAGON,\n    bELDER_DRAGON,\n    bRIFT_HERALD,\n    bBARON_NASHOR,\n    bWon,\n    rKills,\n    rTOP_OUTER_TURRET,\n    rTOP_INNER_TURRET,\n    rTOP_BASE_TURRET,\n    rTOP_INHIBITOR,\n    rMID_OUTER_TURRET,\n    rMID_INNER_TURRET,\n    rMID_BASE_TURRET,\n    rMID_INHIBITOR,\n    rMID_NEXUS_TURRET,\n    rBOT_OUTER_TURRET,\n    rBOT_INNER_TURRET,\n    rBOT_BASE_TURRET,\n    rBOT_INHIBITOR,\n    rDRAGON,\n    rELDER_DRAGON,\n    rRIFT_HERALD,\n    rBARON_NASHOR,\n    rWon\n}","import React from \"react\";\nimport { Team } from \"../models/Policies\";\nimport { PolicySchema } from \"../models/Policy\";\nimport { PolicyContext, TeamContext } from \"../utils/Context\";\n\ntype PolicyProps = {\n    policy: PolicySchema;\n    isSelected?: boolean;\n    isDisabled?: boolean;\n    isBestProb?: boolean;\n    isBestQValue?: boolean;\n    showState?: boolean;\n    showAction?: boolean;\n    showProbability?: boolean;\n    showQValue?: boolean;\n    showGoldAdv?: boolean;\n}\n\ntype PolicyState = {\n\n}\n\nexport default class Policy extends React.Component<PolicyProps, PolicyState> {\n    constructor(props: PolicyProps) {\n        super(props);\n\n        this.state = {\n\n        };\n    }\n\n    render(): JSX.Element {\n        const { policy, isSelected = false, isDisabled = false, isBestProb = false, isBestQValue = false, showState = false, showAction = false, showProbability = false, showQValue = false, showGoldAdv = false } = this.props;\n        const probability = policy.probability < 0 ? \"-\" : `${(policy.probability * 100).toFixed(2)}%`;\n        const qValue = policy.qValue < 0 ? \"-\" : `${policy.qValue.toFixed(2)}`;\n        const goldAdv = policy.goldAdv === \"\" ? \"-\" : policy.goldAdv;\n        return (\n            <TeamContext.Consumer>\n                {({team}) => (\n                    <PolicyContext.Consumer>\n                        {({choosePolicy}) => (\n                            <button className={`flex flex-col items-center w-full ${isSelected ? (team === Team.Blue ? \"bg-blue-600 text-blue-200\" : \"bg-red-600 text-red-200\") : \"\"} ${isDisabled ? \"opacity-50 cursor-default\" : \"\"}`}\n                                onClick={() => choosePolicy(team, policy)}\n                                disabled={isDisabled}>\n                                <span className={`${showState ? \"\" : \"hidden\"}`}>{policy.state}</span>\n                                <span className={`${showAction ? \"text-sm\" : \"hidden\"}`}>{policy.action}</span>\n                                <div className=\"flex flex-row\">\n                                    <div className={`${showProbability ? \"flex flex-col mr-4\" : \"hidden\"} ${isBestProb ? \"text-green-300 font-bold\" : \"\"}`}>\n                                        <span className=\"text-xs\">Probability</span>\n                                        <span className=\"text-sm\">{probability}</span>\n                                    </div>\n                                    <div className={`${showQValue ? \"flex flex-col mr-4\" : \"hidden\"} ${isBestQValue ? \"text-green-300 font-bold\" : \"\"}`}>\n                                        <span className=\"text-xs\">Q-Value</span>\n                                        <span className=\"text-sm\">{qValue}</span>\n                                    </div>\n                                    <div className={`${showGoldAdv ? \"flex flex-col\" : \"hidden\"}`}>\n                                        <span className=\"text-xs\">Gold Adv</span>\n                                        <span className=\"text-sm\">{goldAdv}</span>\n                                    </div>\n                                </div>\n                            </button>\n                        )}\n                    </PolicyContext.Consumer>\n                )}\n            </TeamContext.Consumer>\n        );\n    }\n}","import deepEqual from \"deep-equal\";\nimport React from \"react\";\nimport Scrollbars from \"react-custom-scrollbars-2\";\nimport { Team } from \"../models/Policies\";\nimport { PolicySchema } from \"../models/Policy\";\nimport { PolicyContext, TeamContext } from \"../utils/Context\";\nimport { Action } from \"../utils/Enums\";\nimport Policy from \"./Policy\";\nimport { Scrollbar } from \"./Scrollbar\";\n\ntype PolicyStateProps = {\n    state: number;\n    selectedAction?: PolicySchema;\n    actions?: PolicySchema[];\n    isDisabled?: boolean;\n}\n\ntype PolicyStateState = {\n    \n}\n\nexport default class PolicyState extends React.Component<PolicyStateProps, PolicyStateState> {\n    static contextType = PolicyContext;\n    constructor(props: PolicyStateProps) {\n        super(props);\n\n        this.state = {\n            \n        };\n    }\n\n    render(): JSX.Element {\n        const { state, selectedAction, actions = [], isDisabled = false } = this.props;\n        const allSchemas: PolicySchema[] = actions;\n        let bestProb: PolicySchema | undefined;\n        let bestQ: PolicySchema | undefined;\n        if (actions.length <= 0) {\n            for (const value in Action) {\n                if (!isNaN(Number(value)))\n                    continue;\n                \n                const schema: PolicySchema = \n                    selectedAction !== undefined && selectedAction.action === value ? \n                        selectedAction : \n                        { state: state, action: value, probability: -1, qValue: -1, goldAdv: \"\" };\n                allSchemas.push(schema);\n            }\n        } else {\n            bestProb = actions.reduce((prev, current) => (prev.probability > current.probability) ? prev : current);\n            bestQ = actions.reduce((prev, current) => (prev.qValue > current.qValue) ? prev : current);\n        }\n\n        return (\n            <TeamContext.Consumer>\n                {({team}) => (\n                    <div className=\"flex flex-col w-64 h-full p-4\">\n                        <div className={`flex flex-col items-center justify-center mb-2 h-12 ${team === Team.Blue ? \"text-blue-900\" : \"text-red-900\"}`}>\n                            <span className=\"text-xs\" style={{marginBottom: \"-0.5rem\"}}>Action</span>\n                            <span className=\"text-2xl font-medium\">{state + 1}</span>\n                        </div>\n                        <div className={`flex flex-col h-full py-4 border-2 shadow-lg rounded-lg bg-gray-100 ${team === Team.Blue ? \"border-blue-800\" : \"border-red-800\"}`}>\n                            <Scrollbars autoHide autoHideTimeout={250} style={{width: \"100%\"}}>\n                                {allSchemas.map((value, index) => (\n                                    <div key={index} className={`${index === allSchemas.length - 1 ? \"\" : \"mb-2\"}`}>\n                                        <Policy policy={value} \n                                            isSelected={selectedAction !== undefined && (value.action === selectedAction.action || (bestProb !== undefined && deepEqual(bestProb, value)))} \n                                            isDisabled={isDisabled}\n                                            isBestProb={bestProb !== undefined && deepEqual(bestProb, value)}\n                                            isBestQValue={bestQ !== undefined && deepEqual(bestQ, value)}\n                                            showAction \n                                            showProbability \n                                            showQValue \n                                            showGoldAdv />\n                                    </div>\n                                ))}\n                            </Scrollbars>\n                        </div>\n                    </div>\n                )}\n            </TeamContext.Consumer>\n        );\n    }\n}","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { useContext } from \"react\";\nimport Scrollbars from \"react-custom-scrollbars-2\";\nimport { DummyPoliciesModel, IPoliciesModel, PoliciesModel, PoliciesSchema, Team } from \"../models/Policies\";\nimport { PolicyModel, PolicySchema } from \"../models/Policy\";\nimport { AccuracyContext, AccuracyContextType, AuthContext, AuthContextType, BaseUrlContext, BaseUrlContextType, PolicyContext, TeamContext, TeamContextType } from \"../utils/Context\";\nimport { Action } from \"../utils/Enums\";\nimport { setStateAsync } from \"../utils/Helpers\";\nimport Policy from \"./Policy\";\nimport PolicyState from \"./PolicyState\";\nimport logo from \"../logo.svg\";\n\ntype PoliciesProps = {\n    teamContext: TeamContextType;\n    accuracyContext: AccuracyContextType;\n    authContext: AuthContextType;\n    baseUrlContext: BaseUrlContextType;\n}\n\ntype PoliciesState = {\n    currentPolicies: IPoliciesModel;\n    bestPolicies: IPoliciesModel;\n    nextPolicies: IPoliciesModel;\n    pastPolicies: PoliciesSchema[];\n    isLoading: boolean;\n    correctCount: number;\n}\n\nclass PoliciesInner extends React.Component<PoliciesProps, PoliciesState> {\n    constructor(props: PoliciesProps) {\n        super(props);\n\n        const baseUrl = props.baseUrlContext.baseUrl;\n        this.state = {\n            currentPolicies: new PoliciesModel(baseUrl),\n            bestPolicies: new PoliciesModel(baseUrl),\n            nextPolicies: new PoliciesModel(baseUrl),\n            pastPolicies: [],\n            isLoading: true,\n            correctCount: 0\n        };\n\n        this.onTeamChanged = this.onTeamChanged.bind(this);\n        this.onBaseUrlChanged = this.onBaseUrlChanged.bind(this);\n        this.resetPolicies = this.resetPolicies.bind(this);\n        this.onChoosePolicy = this.onChoosePolicy.bind(this);\n    }\n\n    async componentDidMount(): Promise<void> {\n        const { teamContext, baseUrlContext } = this.props;\n\n        teamContext.addListener(\"policies\", this.onTeamChanged);\n        baseUrlContext.addListener(\"policies\", this.onBaseUrlChanged);\n\n        await this.state.nextPolicies.retrieveStartPolicies(this.props.authContext.token);\n        await setStateAsync({isLoading: false}, this);\n    }\n\n    async onTeamChanged(team: Team): Promise<void> {\n        await this.resetPolicies();\n    }\n\n    async onBaseUrlChanged(baseUrl: string): Promise<void> {\n        await this.resetPolicies();\n    }\n\n    async resetPolicies(): Promise<void> {\n        await setStateAsync({isLoading: true, pastPolicies: []}, this);\n        await this.state.currentPolicies.clearPolicies();\n        await this.state.bestPolicies.clearPolicies();\n        await this.state.nextPolicies.retrieveStartPolicies(this.props.authContext.token);\n        await this.props.accuracyContext.setAccuracy(0);\n        await setStateAsync({isLoading: false}, this);\n    }\n\n    async onChoosePolicy(team: Team, policy: PolicySchema): Promise<void> {\n        const { accuracyContext, authContext } = this.props;\n        const { pastPolicies, currentPolicies, bestPolicies, nextPolicies, correctCount } = this.state;\n\n        currentPolicies.addPolicy(policy);\n\n        const bestSchemas = bestPolicies.getSchema().policies;\n        const currentSchemas = currentPolicies.getSchema().policies;\n\n        // For counting how many times the best policy got a right prediction\n        let count = correctCount;\n        if (bestSchemas.length > 1 && policy.action === bestSchemas[1].action)\n            count++;\n\n        if (currentSchemas.length > 1)\n            accuracyContext.setAccuracy(count / (currentSchemas.length - 1));\n\n        const policiesArr = pastPolicies.concat({policies: nextPolicies.getSchema().policies});\n        await setStateAsync({isLoading: true, pastPolicies: policiesArr, correctCount: count}, this);\n\n        const currentState = currentSchemas.length - 1;\n        if (currentState >= 0) {\n            await bestPolicies.retrieveBestPolicies(authContext.token, team, currentState, policy.action);\n            await nextPolicies.retrieveNextPolicies(authContext.token, team, currentState, policy.action);\n        }\n\n        await setStateAsync({isLoading: false}, this);\n    }\n\n    componentWillUnmount(): void {\n        const { teamContext, baseUrlContext } = this.props;\n        teamContext.removeListener(\"policies\");\n        baseUrlContext.removeListener(\"policies\");\n    }\n\n    render(): JSX.Element {\n        const { pastPolicies, currentPolicies, bestPolicies, nextPolicies, isLoading } = this.state;\n        const currentSchemas = currentPolicies.getSchema().policies;\n        const bestSchemas = bestPolicies.getSchema().policies;\n        const nextSchemas = nextPolicies.getSchema().policies;\n        const allSchemas = [];\n        allSchemas.push(...currentSchemas);\n        allSchemas.push(...bestSchemas.slice(1));\n\n        let nextState = 0;\n        if (nextSchemas.length > 0)\n            nextState = nextSchemas[0].state;\n        \n        return (\n            <PolicyContext.Provider value={{choosePolicy: this.onChoosePolicy}}>\n                <div className=\"w-full h-full relative\">\n                    {(isLoading && \n                        <div className=\"absolute top-0 right-0 bottom-0 left-0 flex flex-col items-center justify-center backdrop-filter backdrop-blur-sm z-10\">\n                            <div className=\"p-4 bg-gray-800 rounded-md\">\n                                <img src={logo} alt=\"logo\" className=\"App-logo\" />\n                                <span className=\"text-2xl text-blue-200\">Loading</span>\n                            </div>\n                        </div>\n                    )}\n                    <Scrollbars autoHide autoHideTimeout={250}>\n                        <div className=\"flex flex-row h-full\">\n                            {(currentSchemas.length <= 0 &&\n                                <PolicyState state={0} actions={nextSchemas} />\n                            ) ||\n                            (currentSchemas.length > 0 && \n                                <>\n                                    {allSchemas.map((policy, index) => (\n                                        <div key={index} className=\"\">\n                                            {(policy.state === nextState && \n                                                <PolicyState state={policy.state} selectedAction={policy} actions={nextSchemas} />\n                                            ) ||\n                                            (policy.state !== nextState && index < pastPolicies.length &&\n                                                <PolicyState state={policy.state} selectedAction={policy} actions={pastPolicies[index].policies} isDisabled />\n                                            ) ||\n                                            (policy.state !== nextState && index >= pastPolicies.length &&\n                                                <PolicyState state={policy.state} selectedAction={policy} isDisabled />\n                                            )}\n                                        </div>\n                                    ))}\n                                </>\n                            )}\n                        </div>\n                    </Scrollbars>\n                </div>\n            </PolicyContext.Provider>  \n        );\n    }\n}\n\nexport default function Policies(): JSX.Element {\n    const team = useContext(TeamContext);\n    const accuracy = useContext(AccuracyContext);\n    const auth = useContext(AuthContext);\n    const baseUrl = useContext(BaseUrlContext);\n\n    return (\n        <PoliciesInner teamContext={team} accuracyContext={accuracy} authContext={auth} baseUrlContext={baseUrl} />\n    );\n}","import React from \"react\";\nimport { Team } from \"../models/Policies\";\nimport { SearchContext, TeamContext } from \"../utils/Context\";\n\ntype SearchbarProps = {\n\n}\n\ntype SearchbarState = {\n\n}\n\nexport default class Searchbar extends React.Component<SearchbarProps, SearchbarState> {\n    constructor(props: SearchbarProps) {\n        super(props);\n\n        this.state = {\n\n        };\n    }\n\n    render(): JSX.Element {\n        const demoLink = \"https://youtu.be/kTewx3x6Dps\";\n\n        return (\n            <TeamContext.Consumer>\n                {({ team }) => (\n                    <SearchContext.Consumer>\n                        {({ searchStr, setSearchStr, searchAction }) => (\n                            <div className=\"flex w-full px-4 py-2 max-w-3xl h-12\">\n                                <input \n                                    className=\"w-full mr-2 rounded-default shadow-inner px-2 text-sm\" \n                                    placeholder=\"Type in Youtube link here...\"\n                                    value={searchStr}\n                                    onChange={event => setSearchStr(event.target.value)}\n                                    onSubmit={() => searchAction()} />\n                                <button className={`px-4 mr-2 rounded-default text-sm ${team === Team.Blue ? \"bg-blue-500 text-blue-200\" : \"bg-red-500 bg- text-red-200\"}`}\n                                    onClick={() => searchAction()}>\n                                    Search\n                                </button>\n                                <button className={`px-4 rounded-default text-sm ${team === Team.Blue ? \"bg-blue-500 text-blue-200\" : \"bg-red-500 bg- text-red-200\"}`}\n                                    onClick={() => setSearchStr(demoLink)}>\n                                    Demo\n                                </button>\n                            </div>\n                        )}\n                    </SearchContext.Consumer>\n                )}\n            </TeamContext.Consumer>\n        );\n    }\n}","import React from \"react\";\nimport Toggle from \"react-toggle\";\nimport { Team } from \"../models/Policies\";\nimport { TeamContext } from \"../utils/Context\";\n\ntype ToggleTeamProps = {\n\n}\n\ntype ToggleTeamState = {\n    \n}\n\nexport default class ToggleTeam extends React.Component<ToggleTeamProps, ToggleTeamState> {\n    constructor(props: ToggleTeamProps) {\n        super(props);\n\n        this.state = {\n            \n        };\n    }\n\n    render(): JSX.Element {\n        return (\n            <TeamContext.Consumer>\n                {({team, setTeam}) => (\n                    <div className=\"flex items-center\">\n                        <label htmlFor=\"\" className=\"flex items-center\">\n                            <span className={`text-lg font-bold mr-2 ${team === Team.Blue ? \"text-blue-900\" : \"text-red-900\"}`}>Team</span>\n                            <Toggle \n                                icons={false}\n                                onChange={event => {\n                                    const team = event.target.checked ? \n                                        Team.Red : Team.Blue;\n                                    setTeam(team);\n                                }} />\n                        </label>\n                    </div>\n                )}\n            </TeamContext.Consumer>\n        );\n    }\n}","import React from \"react\";\nimport { Team } from \"../models/Policies\";\nimport { AccuracyContext, GraphOverlayContext, TeamContext } from \"../utils/Context\";\nimport Searchbar from \"./Searchbar\";\nimport ToggleBaseUrl from \"./ToggleBaseUrl\";\nimport ToggleTeam from \"./ToggleTeam\";\nimport Tooltip from \"./Tooltip\";\n\ntype TopBarProps = {\n\n}\n\ntype TopBarState = {\n    accuracy: number;\n}\n\nexport default class TopBar extends React.Component<TopBarProps, TopBarState> {\n    static contextType = AccuracyContext;\n    constructor(props: TopBarProps) {\n        super(props);\n\n        this.state = {\n            accuracy: 0\n        };\n\n        this.onAccuracyChanged = this.onAccuracyChanged.bind(this);\n    }\n\n    componentDidMount(): void {\n        this.context.addListener(\"topBar\", this.onAccuracyChanged);\n    }\n\n    async onAccuracyChanged(accuracy: number): Promise<void> {\n        this.setState({accuracy: accuracy});\n    }\n\n    componentWillUnmount(): void {\n        this.context.removeListener(\"topBar\");\n    }\n\n    render(): JSX.Element {\n        const { accuracy } = this.state;\n        return (\n            <GraphOverlayContext.Consumer>\n                {({ setShowGraph }) => (\n                    <TeamContext.Consumer>\n                        {({ team }) => (\n                            <div className=\"flex justify-between w-screen h-20 p-4\">\n                                <div className=\"flex flex-row\">\n                                    <div className=\"flex flex-col justify-center mr-4\">\n                                        <ToggleTeam />\n                                        <Tooltip order={0}\n                                            text=\"This is for toggling the team to track, between either Blue or Red team.\"\n                                            position=\"bottom\"\n                                            positionOffsetX={1}\n                                            positionOffsetY={3}\n                                            hasPrev\n                                            hasNext />\n                                    </div>\n                                    <div className=\"flex flex-col justify-center mr-4\">\n                                        <ToggleBaseUrl />\n                                        <Tooltip order={1}\n                                            text=\"This is for choosing whether to use your own local backend server or a premade server for the action queries.\"\n                                            position=\"bottom\"\n                                            positionOffsetY={3}\n                                            hasPrev\n                                            hasNext />\n                                    </div>\n                                </div>\n                                <div className=\"w-full flex flex-col max-w-3xl items-center\">\n                                    <Searchbar />\n                                    <Tooltip order={2}\n                                        text=\"Type in the Youtube link to the match replay here. Click the Demo button for a test Youtube link. The following formats are accepted: https://youtu.be/kTewx3x6Dps or https://www.youtube.com/watch?v=kTewx3x6Dps or kTewx3x6Dps\"\n                                        position=\"bottom\"\n                                        positionOffsetY={3}\n                                        hasPrev\n                                        hasNext />\n                                </div>\n                                <div className=\"flex flex-col items-end justify-center w-40\">\n                                    <button className={`px-4 py-2 rounded-default text-sm ${team === Team.Blue ? \"bg-blue-500 text-blue-200\" : \"bg-red-500 text-red-200\"}`}\n                                        onClick={() => setShowGraph(true)}>\n                                        Show Graphs\n                                    </button>\n                                    <Tooltip order={3}\n                                        text=\"This shows an overlay containing graphs for real-time visualization of data.\"\n                                        position=\"bottom\"\n                                        positionOffsetX={-6}\n                                        positionOffsetY={3}\n                                        hasPrev\n                                        hasClose />\n                                    {/*\n                                <>\n                                    <span className=\"text-sm\">Model Accuracy:</span>\n                                    <span className=\"text-sm font-bold\">{(accuracy * 100).toFixed(2)}%</span>\n                                </>\n                            /**/}\n                                </div>\n                            </div>\n                        )}\n                        \n                    </TeamContext.Consumer>\n                )}\n                \n            </GraphOverlayContext.Consumer>\n        );\n    }\n}","import React from \"react\";\nimport { SearchContext } from \"../utils/Context\";\n\ntype VideoPlayerProps = {\n\n}\n\ntype VideoPlayerState = {\n    embedId: string;\n    isIdValid: boolean;\n}\n\nexport default class VideoPlayer extends React.Component<VideoPlayerProps, VideoPlayerState> {\n    static contextType = SearchContext;\n    private readonly WIDTH = 840;\n    constructor(props: VideoPlayerProps) {\n        super(props);\n\n        this.state = {\n            embedId: \"\",\n            isIdValid: true\n        };\n\n        this.getEmbedId = this.getEmbedId.bind(this);\n    }\n\n    componentDidMount(): void {\n        this.context.addActionListener(\"videoPlayer\", this.getEmbedId);\n    }\n\n    // Valid link formats: \n    // https://www.youtube.com/watch?v=JzeZZ3IV27Q\n    // https://youtu.be/JzeZZ3IV27Q\n    // JzeZZ3IV27Q\n    async getEmbedId(searchStr: string): Promise<void> {\n        const regex = /^(https:\\/\\/www.youtube.com\\/watch\\?v=[a-zA-Z0-9]{11})|(https:\\/\\/youtu.be\\/[a-zA-Z0-9]{11})|([a-zA-Z0-9]{11})$/;\n        let embedId = \"\";\n\n        if (searchStr.match(regex))\n            embedId = searchStr.substring(searchStr.length - 11);\n\n        if (!embedId || embedId.length !== 11) {\n            this.setState({embedId: \"\", isIdValid: false});\n            return;\n        }\n\n        this.setState({embedId: embedId, isIdValid: true});\n    }\n\n    componentWillUnmount(): void {\n        this.context.removeActionListener(\"videoPlayer\");\n    }\n\n    render(): JSX.Element {\n        const { embedId, isIdValid } = this.state;\n        const height = this.WIDTH * (9 / 16);\n        return (\n            <div className=\"flex w-full justify-center relative\">\n                <div className=\"absolute left-0 right-0 top-0 bottom-0 bg-gray-900 opacity-50\"></div>\n                {(!embedId && \n                    <div className=\"flex w-full justify-center z-10\">\n                        <div className=\"flex items-center justify-center bg-gray-900\" style={{width: this.WIDTH, height: height}}>\n                            <span className=\"text-gray-400\">{`${isIdValid ? \"No video selected.\" : \"Invalid video url or id given.\"}`}</span>\n                        </div>\n                    </div>\n                ) || \n                (embedId &&\n                    <div className=\"z-10\">\n                        <iframe width={this.WIDTH}\n                            height={height}\n                            src={`https://www.youtube.com/embed/${embedId}`}\n                            frameBorder=\"0\"\n                            allow=\"accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                            allowFullScreen\n                            title=\"Youtube\" />\n                    </div>\n                )}\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Overlay from \"../components/Overlay\";\nimport Policies from \"../components/Policies\";\nimport PolicyState from \"../components/PolicyState\";\nimport ToggleTeam from \"../components/ToggleTeam\";\nimport TopBar from \"../components/TopBar\";\nimport VideoPlayer from \"../components/VideoPlayer\";\nimport { Team } from \"../models/Policies\";\nimport { AccuracyContext, AuthContext, CookiesContext, GraphOverlayContext, SearchContext, TeamContext } from \"../utils/Context\";\nimport { Action } from \"../utils/Enums\";\n\ntype MainPageProps = {\n\n}\n\ntype MainPageState = {\n    team: Team;\n    searchStr: string;\n    showGraph: boolean;\n}\n\ntype TeamListener = {\n    name: string;\n    listener: (team: Team) => Promise<void>;\n}\n\ntype AccuracyListener = {\n    name: string;\n    listener: (accuracy: number) => Promise<void>;\n}\n\ntype SearchListener = {\n    name: string;\n    listener: (searchStr: string) => Promise<void>;\n}\n\nexport default class MainPage extends React.Component<MainPageProps, MainPageState> {\n    private teamListeners: TeamListener[] = [];\n    private accuracyListeners: AccuracyListener[] = [];\n    private searchListeners: SearchListener[] = [];\n    constructor(props: MainPageProps) {\n        super(props);\n\n        this.state = {\n            team: Team.Blue,\n            searchStr: \"\",\n            showGraph: false\n        };\n\n        this.setTeam = this.setTeam.bind(this);\n        this.addTeamListener = this.addTeamListener.bind(this);\n        this.removeTeamListener = this.removeTeamListener.bind(this);\n\n        this.setAccuracy = this.setAccuracy.bind(this);\n        this.addAccuracyListener = this.addAccuracyListener.bind(this);\n        this.removeAccuracyListener = this.removeAccuracyListener.bind(this);\n\n        this.setSearchStr = this.setSearchStr.bind(this);\n        this.searchAction = this.searchAction.bind(this);\n        this.addSearchActionListener = this.addSearchActionListener.bind(this);\n        this.removeSearchActionListener = this.removeSearchActionListener.bind(this);\n\n        this.setShowGraph = this.setShowGraph.bind(this);\n    }\n\n    setTeam(team: Team): void {\n        this.setState({team: team}, async () => {\n            // run all listeners\n            await Promise.all(this.teamListeners.map(fn => fn.listener(team)));\n        });\n    }\n\n    addTeamListener(name: string, listener: (team: Team) => Promise<void>): void {\n        if (this.teamListeners.filter(listener => listener.name === name).length > 0)\n            return;\n        \n        this.teamListeners.push({name, listener});\n    }\n\n    removeTeamListener(name: string): void {\n        if (this.teamListeners.filter(listener => listener.name === name).length <= 0)\n            return;\n\n        this.teamListeners = this.teamListeners.filter(listener => listener.name !== name);\n    }\n\n    async setAccuracy(accuracy: number): Promise<void> {\n        await Promise.all(this.accuracyListeners.map(fn => fn.listener(accuracy)));\n    }\n\n    addAccuracyListener(name: string, listener: (accuracy: number) => Promise<void>): void {\n        if (this.accuracyListeners.filter(listener => listener.name === name).length > 0)\n            return;\n        \n        this.accuracyListeners.push({name, listener});\n    }\n\n    removeAccuracyListener(name: string): void {\n        if (this.accuracyListeners.filter(listener => listener.name === name).length <= 0)\n            return;\n\n        this.accuracyListeners = this.accuracyListeners.filter(listener => listener.name !== name);\n    }\n\n    setSearchStr(searchStr: string): void {\n        this.setState({searchStr: searchStr});\n    }\n\n    async searchAction(): Promise<void> {\n        const { searchStr } = this.state;\n        await Promise.all(this.searchListeners.map(fn => fn.listener(searchStr)));\n    }\n\n    addSearchActionListener(name: string, listener: (searchStr: string) => Promise<void>): void {\n        if (this.searchListeners.filter(listener => listener.name === name).length > 0)\n            return;\n\n        this.searchListeners.push({name, listener});\n    }\n\n    removeSearchActionListener(name: string): void {\n        if (this.searchListeners.filter(listener => listener.name === name).length <= 0)\n            return;\n\n        this.searchListeners = this.searchListeners.filter(listener => listener.name !== name);\n    }\n\n    setShowGraph(showGraph: boolean) {\n        this.setState({showGraph: showGraph});\n    }\n    \n    render(): JSX.Element {\n        const { team, searchStr, showGraph } = this.state;\n        return (\n            <AuthContext.Consumer>\n                {({ token }) => {\n                    if (!token)\n                        return (<Redirect to=\"/login\" />);\n                    return (\n                        <TeamContext.Provider value={{team: team, setTeam: this.setTeam, addListener: this.addTeamListener, removeListener: this.removeTeamListener}}>\n                            <AccuracyContext.Provider value={{setAccuracy: this.setAccuracy, addListener: this.addAccuracyListener, removeListener: this.removeAccuracyListener}}>\n                                <SearchContext.Provider value={{searchStr: searchStr, setSearchStr: this.setSearchStr, searchAction: this.searchAction, addActionListener: this.addSearchActionListener, removeActionListener: this.removeSearchActionListener}}>\n                                    <GraphOverlayContext.Provider value={{showGraph: showGraph, setShowGraph: this.setShowGraph}}>\n                                        <div className={`transition-default duration-500 ease-in-out flex flex-col w-screen h-screen ${team === Team.Blue ? \"bg-blue-300\" : \"bg-red-300\"}`}>\n                                            <TopBar />\n                                            <VideoPlayer />\n                                            <Policies />\n                                            {showGraph && (\n                                                <Overlay />\n                                            )}\n                                        </div>\n                                    </GraphOverlayContext.Provider>\n                                </SearchContext.Provider>\n                            </AccuracyContext.Provider>\n                        </TeamContext.Provider>\n                    );\n                }}\n            </AuthContext.Consumer>\n        );\n    }\n}","import axios from \"axios\";\nimport React from \"react\";\nimport { Cookies, withCookies } from \"react-cookie/es6\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport LoginPage from \"./pages/LoginPage\";\nimport MainPage from \"./pages/MainPage\";\nimport Configuration from \"./utils/Configuration\";\nimport { AuthContext, BaseUrlContext, CookiesContext, TooltipContext } from \"./utils/Context\";\n\n\ntype AppProps = {\n    cookies: Cookies;\n}\n\ntype AppState = {\n    token: string;\n    baseUrl: string;\n    currentTooltip: number;\n    isTooltipEnabled: boolean;\n}\n\ntype BaseUrlListener = {\n    name: string;\n    listener: (baseUrl: string) => Promise<void>;\n}\n\nexport class App extends React.Component<AppProps, AppState> {\n    private baseUrlListeners: BaseUrlListener[] = [];\n    constructor(props: AppProps) {\n        super(props);\n\n        this.state = {\n            token: \"\",\n            baseUrl: Configuration.serverBaseUrl,\n            currentTooltip: 0,\n            isTooltipEnabled: true\n        };\n\n        this.setToken = this.setToken.bind(this);\n        this.loadTokenFromCookie = this.loadTokenFromCookie.bind(this);\n        this.checkTokenValid = this.checkTokenValid.bind(this);\n\n        this.setBaseUrl = this.setBaseUrl.bind(this);\n        this.addBaseUrlListener = this.addBaseUrlListener.bind(this);\n        this.removeBaseUrlListener = this.removeBaseUrlListener.bind(this);\n\n        this.setCurrentTooltip = this.setCurrentTooltip.bind(this);\n        this.resetCurrentTooltip = this.resetCurrentTooltip.bind(this);\n        this.setTooltipEnabled = this.setTooltipEnabled.bind(this);\n    }\n\n    async componentDidMount(): Promise<void> {\n        await this.loadTokenFromCookie();\n\n        const { cookies } = this.props;\n        const enabled: string | undefined = cookies.get(\"isTooltipEnabled\");\n        \n        if (enabled == undefined)\n            cookies.set(\"isTooltipEnabled\", true);\n        else\n            this.setState({isTooltipEnabled: enabled === \"true\"});\n    }\n\n    async setToken(token: string): Promise<void> {\n        const { cookies } = this.props;\n        const isTokenValid = await this.checkTokenValid(token);\n        if (isTokenValid)\n            this.setState({token: token}, () => {\n                cookies.set(\"token\", token);\n                this.resetCurrentTooltip();\n            });\n        else\n            this.setState({token: \"\"}, () => {\n                this.resetCurrentTooltip();\n            });\n    }\n\n    async loadTokenFromCookie(): Promise<void> {\n        const { cookies } = this.props;\n        const token: string = cookies.get(\"token\");\n        if (!token)\n            return;\n\n        const isTokenValid = await this.checkTokenValid(token);\n        this.setState({token: isTokenValid ? token : \"\"}, () => {\n            this.resetCurrentTooltip();\n        });\n    }\n\n    async checkTokenValid(token: string): Promise<boolean> {\n        const { baseUrl } = this.state;\n\n        try {\n            const res = await axios.get(`${baseUrl}/auth/token`, {\n                headers: {\n                    \"X-Access-Tokens\": token\n                }\n            });\n\n            if (res.status === 200)\n                return res.data[\"message\"] === \"valid token\";\n\n            return false;\n        } catch (err) {\n            alert(`${err.response.status}: ${err.response.data}`);\n            return false;\n        }\n    }\n\n    setBaseUrl(baseUrl: string): void {\n        this.setState({baseUrl: baseUrl}, async () => {\n            await Promise.all(this.baseUrlListeners.map(fn => fn.listener(baseUrl)));\n        });\n    }\n\n    addBaseUrlListener(name: string, listener: (baseUrl: string) => Promise<void>): void {\n        if (this.baseUrlListeners.filter(listener => listener.name === name).length > 0)\n            return;\n\n        this.baseUrlListeners.push({name, listener});\n    }\n\n    removeBaseUrlListener(name: string): void {\n        if (this.baseUrlListeners.filter(listener => listener.name === name).length <= 0)\n            return;\n\n        this.baseUrlListeners = this.baseUrlListeners.filter(listener => listener.name !== name);\n    }\n\n    setCurrentTooltip(index: number): void {\n        this.setState({currentTooltip: index});\n    }\n\n    resetCurrentTooltip(): void {\n        this.setCurrentTooltip(0);\n    }\n\n    setTooltipEnabled(isEnabled: boolean): void {\n        const { cookies } = this.props;\n        this.setState({isTooltipEnabled: isEnabled}, () => {\n            cookies.set(\"isTooltipEnabled\", isEnabled);\n        });\n    }\n\n    render(): JSX.Element {\n        const { cookies } = this.props;\n        const { token, baseUrl, currentTooltip, isTooltipEnabled } = this.state;\n        \n        return (\n            <AuthContext.Provider value={{token: token, setToken: this.setToken}}>\n                <BaseUrlContext.Provider value={{baseUrl: baseUrl, setBaseUrl: this.setBaseUrl, addListener: this.addBaseUrlListener, removeListener: this.removeBaseUrlListener}}>\n                    <CookiesContext.Provider value={{cookies: cookies}}>\n                        <TooltipContext.Provider value={{currentTooltip: currentTooltip, isTooltipEnabled: isTooltipEnabled, setCurrentTooltip: this.setCurrentTooltip, resetCurrentTooltip: this.resetCurrentTooltip, setTooltipEnabled: this.setTooltipEnabled}}>\n                            <Switch>\n                                <Route exact path=\"/\">\n                                    {token ? <Redirect to=\"/main\" /> : <Redirect to=\"/login\" />}\n                                </Route>\n                                <Route path=\"/login\">\n                                    {token ? <Redirect to=\"/main\" /> : <LoginPage />}\n                                </Route>\n                                <Route path=\"/main\">\n                                    <MainPage />\n                                </Route>\n                            </Switch>\n                        </TooltipContext.Provider>\n                    </CookiesContext.Provider>\n                </BaseUrlContext.Provider>\n            </AuthContext.Provider>\n        );\n    }\n}\n\nexport default withCookies(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" }\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./assets/app.css\";\nimport \"./assets/main.css\";\nimport \"./assets/toggle.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { CookiesProvider } from \"react-cookie/es6\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter basename=\"/capstone-frontend\">\n            <CookiesProvider>\n                <App />\n            </CookiesProvider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}